class Solution {
public:
    int searchInsert(vector<int> &nums, int target)  {
      
        
        int n= nums.size();
        int low=  0 , high = n-1;
        int ans = n;
        while(low<=high){
            int mid = (low+high)/2;
            if(nums[mid]>=target) {
                ans= mid;
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
return ans;
    }
};
    
#include <bits/stdc++.h>
int searchInsert(vector<int>& arr, int m)
{
	// Write your code here.
	int n = arr.size();
	int low = 0 , high = n-1;
	int ans = n;
	while(low<=high){
		int mid = (low+high)/2;
		if(arr[mid] == m) return mid;


		if(arr[mid]> m){
			ans=mid;
			high= mid-1;
		}
		else{
			low=mid+1;
		}
	}
	

	return ans;
}
