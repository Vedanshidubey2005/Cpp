#include <bits/stdc++.h>
int firstO(vector<int> &nums, int n , int k){
        int low=  0 , high = n-1;
        int first = -1;
        while(low<=high){
            int mid = (low+high)/2;
            if(nums[mid]==k) {
                first= mid;
                high = mid-1;
            }
            else if(nums[mid]< k) {
                low=mid+1;
            }
            else{
                high = mid-1;
            }
        
        }
return first;
    }
    
    
int lastO(vector<int> &nums, int n , int k){
        int low=  0 , high = n-1;
        int last = -1;
        while(low<=high){
            int mid = (low+high)/2;
            if(nums[mid]==k) {
                last= mid;
                low = mid+1;
            }
            else if(nums[mid]< k) {
                low=mid+1;
            }
            else{
                high = mid-1;
            }
        
        }
return last;
    }
pair<int,int> FirstandLast(vector<int> &nums, int n , int k) {
        int first =firstO(nums,n,k);
        if(first==-1){
            return {-1,-1};
        }
        int last = lastO(nums,n,k);
        return {first, last};
    }

    int count(vector<int>& arr, int n, int x){
        pair<int,int> ans = FirstandLast(arr,n,x);
        if(ans.first==-1) return 0;
        return ans.second - ans.first +1;
    }
