// Online C++ compiler to run C++ program online
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
//quick sort --> here we select pivot element and try to place it at its correct position such  that all the smaller or equal to that will be in its left and greater will be its right

// we will define 2 functions quick sort and then aa function to get partition value
//partition function which will return the index of middle element
int partition(vector<int> &arr , int low , int high){
    int pivot = arr[low];
    int i=low;
    int j = high;
    while(i<j){
        while(arr[i]<=pivot && i<=high-1){
            i++;
        }
        while(arr[j]>pivot && j>=low+1){
            j--;
        }
        if(i<j){
            int temp ;
            temp= arr[i];
            arr[i]=arr[j];
            arr[j]=temp;
        }
    }
        int temp1;
        temp1=arr[low];
        arr[low]=arr[j];
        arr[j]=temp1;
        
    
    return j;
}
// quick sort which we will call recursively
void Quick_sort(vector<int> &arr,int low,int high){
    if(low<high){
        int p_index= partition(arr,low,high);
        Quick_sort(arr,low,p_index-1);
        Quick_sort(arr,p_index+1,high);
    }
}
//here this function will take arr as input and there apply quicksort algorithm and return the sorted array
vector<int> qs(vector<int> &arr){
    Quick_sort(arr,0,arr.size()-1);
    return arr;
}

int main() {
   
vector<int>arr;
int size;
   cin>>size;
cout<<"Initial array :"<<endl;
 for(int i=0;i<size;i++){
        int a;
        cin>>a;
        arr.push_back(a);
    }    
    int n= arr.size();
    
    cout<<"Sorted array :"<<endl;
    // Quick_sort(arr,0,n-1);
    qs(arr);
    for(auto it :arr){
        cout<< it << " ";
    }
    
//     8
// Initial array :
// 4 6 2 5 7 9 1 3
// Sorted array :
// 1 2 3 4 5 6 7 9 

    return 0;
}
