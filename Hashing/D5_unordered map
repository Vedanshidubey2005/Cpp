

#include <bits/stdc++.h>
using namespace std;

int main() {
 //Hashing --> prestoring/fetching
 // hashing using unordered map
int n;
cin >> n;
int arr[n];
cout<<"Enter array elements :"<<endl;
for(int i=0;i<n;i++){
    cin >> arr[i];
}
 //precompute
 // unordered map stores value randomly
 // stores unique keys
 // can't store keys in pair
 // best and average case time complexity is constant O(1)
 // worst case time complexity is O(n)
unordered_map<int ,int> mpp;
 for(int i=0;i<n;i++){
     mpp[arr[i]]++;
 }
 //iterate map
 for(auto i : mpp){
     cout<< i.first << "-->" << i.second <<endl;
 }
 
// queries
cout<<"Enter no. of times you want to check occurence"<<endl;
int q;
cin >> q;
while(q--){
    //occurence of which number we have to find
    int n;
    cin >> n;
    //fetch
    cout<< mpp[n] << endl;
}

// 7
// Enter array elements :

// 4 5 6  2 2 4 4
// 2-->2
// 6-->1
// 5-->1
// 4-->3
// Enter no. of times you want to check occurence
// 6
// 4
// 3
// 2
// 2
// 1
// 0
// 5
// 1
// 7
// 0
// 4
// 3




    return 0;
}
