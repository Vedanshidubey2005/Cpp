
// Online C++ compiler to run C++ program online
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
class Node{
    public:
    int data;
    Node* next;
    Node* back;
    public:
    Node(int data1 , Node* next1, Node* back1){
        data= data1;
        next=next1;
        back= back1;
    }
    Node(int data1){
        data= data1;
        next = nullptr;
        back = nullptr;
    }
};
//1
Node* arr2DLL(vector<int>&arr){
    Node* head = new Node(arr[0]);
    Node* prev = head;
    for(int i = 0 ; i<arr.size() -1 ;i++){
        Node* temp = new Node(arr[i],nullptr,prev);
        prev->next=temp;
        prev=temp;
    }
    return head;
}
//2
Node* deletehead(Node* head){
    if(head== NULL || head->next == NULL) {
        return NULL;
    }
    Node* prev= head;
    head= head->next;
    
    head->back = nullptr;
    prev->next = nullptr;
    
    delete prev;
    return head;
}
//3
Node* deletetail(Node* head){
        if(head== NULL || head->next == NULL) return NULL;
        Node* tail = head;
        while(tail->next != NULL){
            tail= tail->next;
        }
        Node* prev = tail->back;
        prev->next =NULL;
        tail->back = NULL;
        delete tail;
        return head;
}
//4
Node* deletekelement(Node* head,int k){
    if(head== NULL){
        return NULL;
    }
    Node* knode =head;
    int cnt=0;
    while(knode!=NULL){
        cnt++;
        if(cnt ==k) break;
        knode= knode->next;
    }
    Node* prev= knode->back;
    Node* front = knode->next;
    if(prev == NULL && front ==NULL){
        return NULL;
    }
    else if(prev== NULL){
        return deletehead(head);
    }
    else if(front==NULL){
        return deletetail(head);
    }
    else{
        prev->next=front;
        front->back= prev;
        knode->next=NULL;
        knode->back= NULL;
        delete knode;
        return head;
    }
}
//5
void deletenode(Node* temp){
    Node* prev= temp->back;
    Node* front = temp-> next;
    
    if(front == NULL){
        prev->next=nullptr;
        temp->back= nullptr;
        free(temp);
    }
    prev->next= front;
    front->back= prev;
    
    temp->next= temp->back = nullptr;
    free(temp);
}

void print(Node* head){
     
  while(head!=NULL){
      cout<< head-> data << " ";
      head = head->next;
  }
  cout<<endl;
}

int main() {
   vector<int>arr ={9,6,4,72,45,67};
  Node* head = arr2DLL(arr);
  //print(head);  //9 9 6 4 72 
  head = deletehead(head);
  //print(head);  //9 6 4 72 
  
    head= deletetail(head);
  //print(head);  // 9 9 6 4 
  
  head= deletekelement(head,1);
  //print(head);  //6 4 72 
  deletenode(head->next);   
  //print(head);        //6 72
 
    return 0;
    
}
