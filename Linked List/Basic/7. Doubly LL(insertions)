#include <iostream>
#include<bits/stdc++.h>
using namespace std;
class Node{
    public:
    int data;
    Node* next;
    Node* back;
    public:
    Node(int data1 , Node* next1, Node* back1){
        data= data1;
        next=next1;
        back= back1;
    }
    Node(int data1){
        data= data1;
        next = nullptr;
        back = nullptr;
    }
};
//1
Node* arr2DLL(vector<int>&arr){
    Node* head = new Node(arr[0]);
    Node* prev = head;
    for(int i = 0 ; i<arr.size() -1 ;i++){
        Node* temp = new Node(arr[i],nullptr,prev);
        prev->next=temp;
        prev=temp;
    }
    return head;
}
//2
Node* insertBhead(Node*head,int val){
    Node* newH= new Node(val,head,nullptr);
    head= head->next;
    return newH;
}
//3
Node* insertBtail(Node*head, int val){
    Node* tail = head;
    while(tail->next!=NULL){
        tail=tail->next;
    }
    Node* prev= tail->back;
    Node* newN = new Node(val,tail,prev);
    prev->next=newN;
    tail->back= newN;
    return head;
}
//4
Node* insertBkth(Node* head, int k,int val){
    if(k == 1){
        return insertBhead(head,val);
    }
    Node* temp = head;
    int cnt=0;
    while(temp != NULL){
        cnt++;
        if(cnt == k ) break;
        temp = temp->next;
    }
    
    Node* prev = temp->back;
    Node* newNode= new Node(val, temp, prev);
    prev->next = newNode ;
    temp->back= newNode;
    return head;
}
//5
void insertBnode(Node* node, int val){
    Node* prev = node->back;
    Node* newNode1= new Node(val, node, prev);
    prev->next= newNode1;
    node->back = newNode1;
    
}
void print(Node* head){
     
  while(head!=NULL){
      cout<< head-> data << " ";
      head = head->next;
  }
  cout<<endl;
}

int main() {
   vector<int>arr ={9,6,4,72,45,67};
  Node* head = arr2DLL(arr);
  //print(head);  //9 9 6 4 72 
 head= insertBhead(head,99);
 print(head);       //99 9 9 6 4 72 45
 
 head= insertBtail(head,33);
 print(head);       //99 9 9 6 4 72 33 45 

head= insertBkth(head,2,11);
//print(head);

insertBnode(head->next->next , 101);
print(head);
    return 0;
    
}
